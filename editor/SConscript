import sys
Import('env')
Import('sigc_lib')
Import('lib_dir')
env = env.Copy()

libs = ['bt', 'sdlx', 'mrt', 'SDL', sigc_lib]

ed_src = [
	'base_brush.cpp', 
	'editor.cpp', 'open_map_dialog.cpp', 'tileset_dialog.cpp', 
	'layer_item.cpp', 'layer_list_dialog.cpp', 'command.cpp', 
	'add_tileset_dialog.cpp', 'add_object_dialog.cpp', 
	'object_properties.cpp', 'tilebox_brush.cpp', 
	'morph_dialog.cpp', 'resize_dialog.cpp', 
]
env.Append(CPPPATH=['#/engine', '#/engine/src'])
if sys.platform != 'win32':
	env.Append(LINKFLAGS=['-Wl,-rpath,' + lib_dir])
	env.Append(LINKFLAGS=['-Wl,-rpath-link,build/' + env['mode']])
	env.Append(LINKFLAGS=['-Wl,-rpath-link,build/' + env['mode'] + '/mrt'])
	env.Append(LINKFLAGS=['-Wl,-rpath-link,build/' + env['mode'] + '/sdlx'])
	env.Append(LINKFLAGS=['-Wl,-rpath-link,build/' + env['mode'] + '/zzip'])
else: 
	libs.append('sdlx_main')
	libs.append('user32')

env.Append(LIBPATH=['#/build/' + env['mode'] + '/engine'])

editor = env.Program('bted', ed_src, LIBS=libs, RPATH=[lib_dir])
Install('#', editor)
if sys.platform == 'win32': 
	env.AddPostAction(editor, 'mt.exe -nologo -manifest ${TARGET}.manifest -outputresource:$TARGET;2')
